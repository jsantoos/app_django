"""
Django settings for first_proj project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import environ
import os

# env = environ.Env(
#     # set casting, default value
#     DEBUG=(bool, False)
# )
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

print(f"BASE_DIR {BASE_DIR}")
print(f"VENV PATH: {os.path.join(BASE_DIR, '.env')}")
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '_%#e155f8jlg=d8s4(2+ch!oo7@8*h3@009mhrxp@j5vn%b03b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', 'iaroboti.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # O painel de administracao
    'django.contrib.auth',  #  O app com funcionalidades de authenticacao
    'django.contrib.contenttypes',  # O app com funcionalidades de relacoes dinamicas.
    'django.contrib.sessions',  # O app para a administracao de sessoes HTTP.
    'django.contrib.messages', # O app para control de mensagens SIMPLES (NAO CHAT)
    'django.contrib.staticfiles', # O app para trabalhar com arquivos staticos (html, js, imagen)
    'polls', # Nosso app
    'polls_2',
]

# Classes que sao executadas no momento de processar uma request antes de executar uma VIEW
#
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'first_proj.urls'  # define qual sera o modulo urls.py principal do projeto

# Simplemente o sistema de templates de django.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# O modulo principal do WSGI
WSGI_APPLICATION = 'first_proj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# As configura;oes do banco de dados.
DATABASES = {
#     'default': env.db(),
# }
        'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # Ele diz que tipo de banco de dados vc estara utilizando definiendo o driver a utilizar
        # POSTGRES: psyocpg2
        # SQLite: sqlite3
        # SQLServer: pyodbc
        'NAME': '', # Nome do banco de dados
        'HOST': '', # A ip ou dominio do servidor de banco de dados.
        'PASSWORD': '', # A senha do banco de dados.
        'USER': '', # O usuario do banco de dados.
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static' # a pasta onde os arquivos staticos estao.

# A Classe que controla esses arquivos.
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
